---
import Page from "../layouts/Page.astro";
import Prompt from "../components/Prompt.astro";
import type { MarkdownInstance } from "astro";
import ReturnHomeCommand from "../components/ReturnHomeCommand.astro";

const projects = await Astro.glob("./project/**/*.md");

const projectsByCategory = projects.reduce(
  (acc: Record<string, MarkdownInstance<Record<string, any>>[]>, project) => {
    const { category } = project.frontmatter;
    if (typeof category !== "string") {
      throw new Error("Project category must be a string");
    }

    if (!acc[category]) {
      acc[category] = [];
    }
    acc[category].push(project);
    return acc;
  },
  {}
);
---

<Page>
  <Prompt command="projects" />
  <p>Here are some projects that I feel are worthy of showing off.</p>
  <br />
  {
    Object.entries(projectsByCategory).map((category) => {
      return (
        <h1 class="font-bold">
          {category[0][0].toUpperCase() + category[0].slice(1)}
        </h1>
        <ul>
            {category[1].map((project) => {
                return (
                    <li>- <a href={project.url} class="underline" >{project.frontmatter.title}</a>{": " + project.frontmatter.description[0].toLowerCase() + project.frontmatter.description.slice(1)}</li>
                )
            })}
        </ul>
        <br />
      );
    })
  }
  <ReturnHomeCommand />
</Page>
